package pl.laskowski.marcin.model.type

import pl.laskowski.marcin.model.dividers.RegionDivider
import pl.laskowski.marcin.type.ISudokuVariant

object SamuraiClassic40x40 : ISudokuVariant {

    override val sizeX = 40
    override val sizeY = 40
    override val regionSize = 16

    override fun template() = """
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_

        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
        
        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
        #,#,#,# #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# #,#,#,#
                
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_

        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
        _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_ #,#,#,# #,#,#,# _,_,_,_ _,_,_,_ _,_,_,_ _,_,_,_
    """.trimIndent()

    override fun divider(): RegionDivider {
        return RegionDivider()
            .applySubSudoku(0, 0, ClassicSquare9x9)
            .applySubSudoku(24, 0, ClassicSquare9x9)
            .applySubSudoku(0, 24, ClassicSquare9x9)
            .applySubSudoku(12, 12, ClassicSquare9x9)
            .applySubSudoku(24, 24, ClassicSquare9x9)
    }
}